import sys

t = (10,20,30,40,50,60,70)
print(sys.getsizeof(t))  # getting the size of tuple object

t1 = (10,20,30,40,50,60,70,80,90)
print(t[0])  # positive indexing
print(t[-1]) #negative indexing
print(t1[2:7]) # using slice operator

t3 = t+t1     # concatenation
t4 = t1*3     # mutiplying tuple object
print(len(t4))
print(t4.index(10))  # finding the index of a given object

t5 =(sorted(t1)) # sorting the tuple object
t11 = tuple(t5)  # type casting the returned list into tuple
print(t5)

a,b,c,d,e,f,g = 10,20,30,40,50,60,70
t6= (a,b,c,d,e,f,g)  # packing of tuple
print(a,b,c,d,e,f,g)

t7 = (11,22,33,44,55,56,77,88,99)
(s,d,f,g,*q) = t7 # unpacking of tuple objects
print(t7)
print(q)  # packing remaining tuple into a list
print(type(q))   # returned type of *q
print(s,d,f,g,q)

t7 = (x*x for x in range(1,21))  # creating comprehension for tuple which returns GENERATOR object
print(type(t7))


d = {(10,20,30,40) : 'hello'}   # creating a dict with tuple KEY
print(type(d))

t8 = (12,23,34,44,55)  # display sum and average for tuple
sum1 = 0
for n in t8:
    sum1 = sum1+n
print("the sum:", sum)
l9 = len(t8)
print('the average:', sum1/l9)

print(sum(t8))  # inbuild function sum and length
print(sum(t8)/len(t8))
